/* Theme Variables */
:root {
  --accent-color: #a050ff;
  --accent-dark: #8030df;
  --accent-light: #a060ff;
  --bg-color: #121212;
  --form-bg: #1e1e1e;
  --text-color: #e0e0e0;
  --input-bg: #2b2b2b;
  --border-color: #333333;
  --success-bg: #2a4a2a; /* For selected choice */
  --disabled-bg: #444444;
  --disabled-text: #888888;
}

/* Global */
body {
  background-color: var(--bg-color);
  color: var(--text-color);
  font-family: Helvetica, sans-serif;
  margin: 0;
  padding: 20px;
  line-height: 1.6;
}

/* Content Containers */
#instructions,
#experiment,
#completion {
  background-color: var(--form-bg);
  padding: 25px 30px;
  border: 1px solid var(--border-color);
  border-radius: 16px;
  max-width: 700px;
  margin: 30px auto;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);
}

/* Headings */
h1, h2 {
  text-align: center;
  margin-top: 0;
  margin-bottom: 25px;
  color: var(--accent-light);
}
h1 {
    margin-bottom: 40px;
}

/* Trial Counter */
#trialCounter {
    color: var(--text-color);
    font-size: 1.2em;
    margin-bottom: 15px;
    text-align: center; /* Center counter */
}

/* Instruction paragraph within experiment */
#experiment > p {
    text-align: center;
    margin-bottom: 20px;
    font-size: 1.1em;
}

/* A/B Controls Layout */
.audio-pair {
  display: flex;
  justify-content: space-around;
  gap: 20px;
  margin-top: 15px;
  margin-bottom: 30px;
  flex-wrap: wrap;
}

/* Individual A/B Control Box */
.audio-control {
  text-align: center;
  padding: 20px;
  border: 1px solid var(--border-color);
  border-radius: 12px;
  background-color: var(--input-bg);
  margin: 5px;
  flex: 1;
  min-width: 220px;
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* "Sample A" / "Sample B" Label */
.audio-control p {
  font-weight: bold;
  margin-top: 0;
  margin-bottom: 15px;
  color: var(--accent-light);
  font-size: 1.1em;
}

/* Base Button Styles */
button {
  padding: 12px 22px;
  font-size: 1em;
  font-weight: bold;
  border-radius: 12px;
  cursor: pointer;
  border: none;
  margin-top: 15px;
  transition: background-color 0.2s ease, opacity 0.2s ease, transform 0.1s ease;
  color: var(--text-color);
  min-width: 120px;
}
button:active:not(:disabled) { /* Active state only for enabled buttons */
    transform: scale(0.98);
}

/* Start Button */
#startButton {
  background-color: var(--accent-color);
  display: block;
  margin-left: auto;
  margin-right: auto;
  min-width: 180px;
}
#startButton:hover {
  background-color: var(--accent-light);
}

/* Play/Stop Buttons */
.playButton {
  background-color: var(--form-bg); /* Match container background */
  border: 1px solid var(--accent-light);
  color: var(--accent-light);
  margin-bottom: 10px; /* Space between Play and Select */
}
.playButton:hover:not(:disabled) { /* Hover only when enabled */
  background-color: rgba(160, 80, 255, 0.1);
  border-color: var(--accent-color);
}

/* Choice Buttons */
.choiceButton {
  background-color: var(--accent-color);
}
.choiceButton:hover:not(:disabled) {
  background-color: var(--accent-light);
}

/* Disabled Button State */
button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  background-color: var(--disabled-bg);
  color: var(--disabled-text);
  border: none; /* Ensure no border on disabled */
  transform: none;
}

/* Selected & Disabled Choice Button (using JS inline style - less ideal but works) */
.choiceButton[style*="background-color: rgb(160, 208, 160)"]:disabled {
    background-color: var(--accent-dark);
    color: var(--text-color);
    opacity: 1;
    border: 1px solid var(--border-color);
}
/* Non-Selected & Disabled Choice Button */
.choiceButton[style*="background-color: rgb(224, 224, 224)"]:disabled {
     background-color: transparent;
     color: var(--acctent-light);
     border: none;
}

/* Results Text Area */
#resultsOutput {
  width: 100%;
  margin-top: 15px;
  padding: 10px;
  font-size: 0.9em;
  border: 1px solid var(--border-color);
  border-radius: 12px;
  background-color: var(--input-bg);
  color: var(--text-color);
  min-height: 200px;
  font-family: monospace;
  box-sizing: border-box;
  resize: vertical;
}
