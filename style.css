/* Theme Variables */
:root {
    --accent-color: #a050ff;
    --accent-dark: #8030df;
    --accent-light: #a060ff;
    --bg-color: #121212;
    --form-bg: #1e1e1e;
    --text-color: #e0e0e0;
    --button-text-on-accent: #ffffff;
    --input-bg: #2b2b2b;
    --border-color: #333333;
    --selected-tint-bg: rgba(160, 80, 255, 0.15);
    --disabled-bg: #444444;
    --disabled-text: #888888;
}

/* Global */
body {
    background-color: var(--bg-color);
    color: var(--text-color);
    font-family: Helvetica, sans-serif;
    margin: 0;
    padding: 20px;
    line-height: 1.6;
}

/* --- Added Styles for Age/Gender Form Groups --- */

.form-group {
    margin-bottom: 20px;
    text-align: left;
}

.form-group label { 
    display: block;
    margin-bottom: 8px;
    font-weight: bold;
    color: var(--accent-light);
}


#experienceForm input[type="number"] {
  padding: 8px 10px;
  font-size: 1em;
  border: 1px solid var(--border-color);
  border-radius: 12px;
  background-color: var(--input-bg);
  color: var(--text-color);
  box-sizing: border-box;
  height: 42px;
  line-height: normal;
  width: 100px;
  min-width: 80px;
  flex: none;
}

.radio-group {
    display: flex;
    flex-wrap: wrap;
    gap: 10px 20px; /* Row gap, Column gap */
}

.radio-option {
    display: flex;
    align-items: center;
    margin-right: 15px; /* Spacing between options */
}

.radio-option input[type="radio"] {
   margin-right: 6px;
   accent-color: var(--accent-color);
   width: 16px;
   height: 16px;
   cursor: pointer;
}

.radio-option label {
    margin-bottom: 0;
    font-weight: normal;
    color: var(--text-color);
    cursor: pointer;
}

/* --- Custom Checkbox Styling --- */

.headphone-check {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-top: 25px;
    margin-bottom: 15px;
}

/* Hide the actual checkbox input visually but keep it accessible */
input[type="checkbox"]#headphoneConfirmCheckbox {
    opacity: 0;
    position: absolute;
    width: 1px;
    height: 1px;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
}

/* Style the label which acts as our custom checkbox trigger */
label[for="headphoneConfirmCheckbox"] {
    position: relative;
    padding-left: 30px; /* Space for the custom box */
    cursor: pointer;
    font-size: 1em;
    user-select: none;
    display: inline-flex;
    align-items: center;
}

/* Style the custom checkbox box using ::before */
label[for="headphoneConfirmCheckbox"]::before {
    content: "";
    display: inline-block;
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    width: 20px; /* Checkbox size */
    height: 20px; /* Checkbox size */
    background-color: var(--input-bg);
    border: 2px solid var(--accent-light);
    border-radius: 4px;
    transition:
        background-color 0.2s ease,
        border-color 0.2s ease;
}

/* Style the custom box when the hidden checkbox is CHECKED */
input[type="checkbox"]#headphoneConfirmCheckbox:checked + label::before {
    background-color: var(--accent-color);
    border-color: var(--accent-color);
}

/* Create the checkmark using ::after (hidden initially) */
label[for="headphoneConfirmCheckbox"]::after {
    content: "";
    display: none;
    position: absolute;
    left: 7px; /* Position checkmark */
    top: 4px; /* Position checkmark */
    width: 6px;
    height: 12px;
    border: solid var(--button-text-on-accent); /* Checkmark color */
    border-width: 0 3px 3px 0;
    transform: rotate(45deg);
}

/* Show the checkmark when the hidden checkbox is CHECKED */
input[type="checkbox"]#headphoneConfirmCheckbox:checked + label::after {
    display: block;
}

/* Optional: Focus style for keyboard navigation */
input[type="checkbox"]#headphoneConfirmCheckbox:focus + label::before {
    outline: 2px solid var(--accent-light);
    outline-offset: 2px;
}
input[type="checkbox"]#headphoneConfirmCheckbox:focus:not(:focus-visible)
    + label::before {
    outline: none;
}

/* --- End Custom Checkbox Styling --- */

/* Content Containers */
#instructions,
#experiment,
#completion,
#experienceForm {
    background-color: var(--form-bg);
    padding: 25px 30px;
    border: 1px solid var(--border-color);
    border-radius: 16px;
    max-width: 700px;
    margin: 30px auto;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.4);
}

/* Headings */
h1,
h2 {
    text-align: center;
    margin-top: 0;
    margin-bottom: 25px;
    color: var(--accent-light);
}
h1 {
    margin-bottom: 40px;
}

/* Trial Counter */
#trialCounter {
    color: var(--text-color);
    font-size: 1.2em;
    margin-bottom: 15px;
    text-align: center;
}

/* Instruction paragraph within experiment */
#experiment > p {
    text-align: center;
    margin-bottom: 20px;
    font-size: 1.1em;
}

/* Base Button Styles */
button {
    padding: 12px 22px;
    font-size: 1em;
    font-weight: bold;
    border-radius: 12px;
    cursor: pointer;
    border: none;
    margin-top: 15px;
    transition:
        background-color 0.2s ease,
        opacity 0.2s ease,
        transform 0.1s ease,
        border-color 0.2s ease,
        color 0.2s ease;
    min-width: 120px;
}
button:active:not(:disabled) {
    transform: scale(0.98);
}

/* Layout Containers */
.play-controls {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-bottom: 25px;
}
.segmented-picker {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-bottom: 25px;
    max-width: 450px;
    margin-left: auto;
    margin-right: auto;
}
.submit-area {
    text-align: center;
    margin-top: 10px;
}

/* Tiered Button Styles */

/* Primary Button Style */
#startButton,
.playButton,
#submitChoiceButton,
#submitExperienceButton {
    background-color: var(--accent-dark);
    color: var(--button-text-on-accent);
    border: 1px solid transparent;
    min-width: 140px;
}
#startButton:hover:not(:disabled),
.playButton:hover:not(:disabled),
#submitChoiceButton:hover:not(:disabled),
#submitExperienceButton:hover:not(:disabled) {
    background-color: var(--accent-light);
}
#startButton,
#submitChoiceButton,
#submitExperienceButton {
    min-width: 180px;
}

/* Secondary Button Style (Picker Buttons) */
.picker-button {
    background-color: transparent;
    border: 1px solid var(--accent-light);
    color: var(--accent-light);
    margin: 0;
    border-radius: 8px;
    padding: 12px 22px;
}
.picker-button:hover:not(:disabled):not(.selected) {
    background-color: rgba(160, 80, 255, 0.05);
}
.picker-button.selected {
    /* Style added by JS */
    background-color: var(--selected-tint-bg);
    border-color: var(--accent-color);
    font-weight: bold;
    color: var(--accent-light);
}

/* Disabled Button State */
button:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    background-color: var(--disabled-bg) !important;
    color: var(--disabled-text) !important;
    border-color: var(--disabled-bg) !important;
    transform: none;
}
.picker-button.selected:disabled {
    background-color: var(--selected-tint-bg) !important;
    border-color: var(--accent-light) !important;
    color: var(--accent-light) !important;
    opacity: 0.6 !important;
}

/* Results Text Area */
#resultsOutput {
    width: 100%;
    margin-top: 15px;
    padding: 10px;
    font-size: 0.9em;
    border: 1px solid var(--border-color);
    border-radius: 12px;
    background-color: var(--input-bg);
    color: var(--text-color);
    min-height: 200px;
    font-family: monospace;
    box-sizing: border-box;
    resize: vertical;
}

/* Accessibility helper */
.visually-hidden {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

/* --- Experience Form Styles --- */

#experienceForm p {
    margin-bottom: 20px;
    text-align: center;
}

.instrument-row {
    display: flex;
    flex-wrap: nowrap;
    gap: 10px;
    margin-bottom: 15px;
    width: 100%;
    align-items: center;
}

#experienceForm select,
#experienceForm input[type="text"],
#experienceForm input[type="number"] {
    padding: 8px 10px;
    font-size: 1em;
    border: 1px solid var(--border-color);
    border-radius: 12px;
    background-color: var(--input-bg);
    color: var(--text-color);
    box-sizing: border-box;
    height: 42px;
    line-height: normal;
}

#experienceForm select,
#experienceForm input[type="text"] {
    flex: 1 1 40%;
    min-width: 150px;
}

#experienceForm input[type="number"] {
    flex: 0 1 100px;
    min-width: 80px;
}

#experienceForm input[name="customInstrument"] {
    display: none; /* Default hidden */
}

#addInstrument {
    /* The '+' button */
    font-size: 24px;
    padding: 0;
    height: 40px;
    width: 40px;
    background-color: transparent;
    border: 1px solid var(--accent-light);
    border-radius: 12px;
    color: var(--accent-light);
    cursor: pointer;
    margin-top: 0;
    margin-left: auto;
    margin-right: auto;
    display: block;
    line-height: 36px;
}
/*#addInstrument:hover:not(:disabled) {
    background-color: rgba(160, 80, 255, 0.1);
}*/

/* Remove Row Button (-) */
.instrument-row .removeRow {
    flex: 0 0 auto;
    background-color: transparent;
    border: none;
    padding: 0;
    margin: 0 0 0 5px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    /* Reset inherited button styles */
    font-size: inherit;
    font-weight: normal;
    min-width: auto;
    color: inherit;
}
.instrument-row .removeRow svg {
    display: block;
    width: 24px;
    height: 24px;
}

/* --- Responsive Adjustments --- */

/* Apply styles when screen width is 500px or less */
@media (max-width: 500px) {
    /* Make the picker buttons stack vertically */
    .segmented-picker {
        flex-direction: column; /* Stack items top-to-bottom */
        align-items: stretch; /* Make buttons stretch to container width */
        max-width: 90%; /* Allow picker to take more width */
        gap: 8px; /* Adjust gap for vertical spacing */
    }

    .picker-button {
        width: 100%; /* Make each button take full width */
        box-sizing: border-box; /* Include padding/border in width */
        margin: 0; /* Reset margin if any was added */
        min-width: auto; /* Reset min-width if needed */
    }

    .play-controls {
        gap: 10px;
    }

    #instructions,
    #experiment,
    #completion,
    #experienceForm {
        padding: 20px 15px;
    }
}
/* --- Light Mode Color Overrides --- */

@media (prefers-color-scheme: light) {
    :root {
        /* Redefine variables for light mode */
        --bg-color: #f4f4f8;       /* Light gray background */
        --form-bg: #ffffff;       /* White content boxes */
        --text-color: #212121;     /* Dark gray text */
        --input-bg: #f0f0f0;       /* Slightly off-white input background */
        --border-color: #cccccc;   /* Lighter border */

        --accent-dark: #a060ff;
        --accent-light: #8030df;

        --selected-tint-bg: rgba(160, 80, 255, 0.08); /* Maybe lighter tint */
        --disabled-bg: #e0e0e0;       /* Light gray disabled background */
        --disabled-text: #a0a0a0;     /* Mid-gray disabled text */
    }
    #instructions,
    #experiment,
    #completion,
    #experienceForm {
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1); /* Lighter shadow */
        border-color: #e0e0e0; /* Even lighter border for containers */
    }
     #experienceForm select,
        #experienceForm input[type="text"],
        #experienceForm input[type="number"],
        #resultsOutput {
            background-color: #ffffff; 
        }
}
